<template>
  <div class="base_msg blockContent">
    <div class="subItems">
			<div class="subname">
				<span>常见用药标志物检测结果</span>
			</div>
      <div v-if="formData.blockCode == '06'" class="addBar" style="padding:0px 0 10px 0; text-align:right;">
        <!-- <el-button type="primary" @click="pushListItem('add')">添加</el-button> -->
        <!-- <el-button type="primary" @click="">发送邮件</el-button> -->
      </div>
      <div class="">
        <el-table class="tableList hasLine" :data="formData1" border stripe style="width: 100%" ref="table">
  	      	<el-table-column prop="gene" label="检测基因" width="180">
              <template slot-scope="scope">
                <span>{{ scope.row.gene }}</span>
                <!-- <span>{{ scope.row.gene }}<span class="bluesj"></span><span v-if="scope.row.checkCell == 'gene'" class="allBg"></span></span> -->
              </template>
  	      	</el-table-column>
  	      	<el-table-column prop="variantTypes" label="变异类型">
  	      	</el-table-column>
  	      	<el-table-column prop="detectionResult" label="检测结果" >
  	      	</el-table-column>
            <el-table-column type="expand" width="1">
              <template slot-scope="props">
                 <popdialog :text="pvalue" :scope="row" :windowType="property" :popData="popData1" :formDatas="formData1"
               :minMark="minMark" :checkMark="checkMark" :cacheData="cacheData" @cmmk="cmmk" @sWindow="sWindow(property, row.code)" @pushHead="pushHead"
               @changeTab="changeTab" @closePanel="closePanel" @blockSearch="blockSearch(formInlines)"></popdialog>
               </template>
            </el-table-column>
  	    </el-table>
      </div>

    </div>


  </div>
</template>
<script>
  import popdialog from '@/components/examine/examineModel/popModel/popdialog'
  export default {
    props: {
        formDatas: {
            type: Array
        },
        popData: {
          type: Object
        },
        checkMark: {
          type: String
        }
    },
    created() {
    },
    data () {
      return {
        isEdit1: false,
        isEdit2: false,
        formData: [],
        formData1: [],
        restaurants: [],
        restaurantsList: [],
        cacheData: {},
        minMark: '1',
        checkNum: false,
        popData1: {
          headList: [],
          datas: {
            cancers: {},
            desc: '',
            drugControls: [],
            gene: '',
            listReportVariant: [],
            molecularNetworkImg: '',
            panels: [],
            pathwayInfos: [],
            termsImg: ''
          }
        },
        property: '',
        pvalue: '',
        row: {},
      }
    },
    methods: {
      cellClick(row, column, cell, event) {
        // con
        let that = this
        if(row.isEdit || row.isAdd) {// 编辑状态不给点击
          return false
        }
        that.property = column.property
        that.pvalue = row[column.property]
        that.row = row
        if(column.property == 'variant' || column.property == 'gene') {
          that.toogleExpand(row)
        }
        if(row.checkCell == '') {
          row.checkCell = column.property
        } else {
          row.checkCell = ''
        }
      },
      toogleExpand(row) {
        let $table = this.$refs.table
        this.formData1.map((item) => {
          if (row.code != item.code) {
            $table.toggleRowExpansion(item, false)
            item.checkCell = ''
          }
        })
        $table.toggleRowExpansion(row)
      },
      blockSearch(formInline) {
        // 查询
        let that = this
        that.$emit('search', formInline)
      },
      sWindow(type, keyVal) {
        // 查询的类型   基因、疾病、药物    keyVal 是查询参数
        console.log('keyVal is :' + keyVal)
        let that = this
        that.$emit('sWindow', type, keyVal)
      },
      changeTab(item, i) {
        // 改变选中的选项
        let that = this
        for (let ec in that.popData1.headList) {
          that.popData1.headList[ec].checkNum = false
        }
        // that.popData1.headList[i].checkNum = true
        that.$set(that.popData1.headList[i], 'checkNum', true)
        that.checkMark = item
        if (that.popData1.headList[i].data) {
          that.cacheData = that.popData1.headList[i].data
        }
      },
      closePanel(i) {
        // 关闭可关闭的当前选项卡
        let that = this
        that.cacheData = {}
        that.popData1.headList.splice(i, 1)
        let n = parseInt(i) - 1
        let items = that.popData1.headList[n].mark
        that.changeTab(items, n)
      },
      cmmk(i) {
        this.minMark = i
      },
      pushHead(type, scope) {
        let that = this
        let n = {
          canClose: true,
          mark: type,
          checkNum: false
        }
        if (type == 'disease') {
          n['label'] = scope.name
        } else if (type == 'drug') {
          n['label'] = scope.drugName ? scope.drugName : scope.drugEnName
        }
        let isneedinsert = true
        for (let i in that.popData1.headList) {
          if (that.popData1.headList[i].label == n.label) {
            isneedinsert = false
            that.changeTab(that.popData1.headList[i].mark, i)
            break
          }
        }
        if (isneedinsert) {
          n['data'] = scope
          that.popData1.headList.push(n)
          that.cacheData = n['data']
          let xx = that.popData1.headList.length - 1
          that.changeTab(type, xx)
        }
        // 临时内容
        console.log(that.cacheData)
        //跳转到当前选中的栏目
        that.checkMark = type
      },
    },
    watch: {
      formDatas: function(newVal,oldVal){
      	let that = this
        this.formData = newVal
        this.formData1 = JSON.parse(JSON.stringify(this.formData))
        for (let i in that.formData1) {
          that.$set(that.formData1[i], 'checkCell', '')
        }
      },
      popData: {
        handler: function(newVal, oldVal) {
          let that = this
          // 重设基本选择位置
          that.popData1 = newVal
        },
        deep: true,
        // immediate: true
      }
    },
    computed: {

    },
    components: {
      popdialog
    }
  }
</script>
