<template>
		<div class="subItems">
			<div class="subtable dtitleBg" style="padding: 0 70px 0px 0;">
				<span>遗传风险解析</span>
				<div class="saveico" v-if="block1 && canEdit" @click="block1 = !block1, saveChange(formData1)"></div>
				<div class="cancel" v-if="block1 && canEdit" @click="block1 = !block1, cancerChange()"></div>
				<div class="bjimg" v-if="!block1 && canEdit" @click="block1 = !block1,changeEdit()"></div>
			</div>
			<div class="inlineItem" style="margin:20px;">
				<table class="modeTable">
					<tr>
						<th width="130px">类别</th>
						<th>详情</th>
					</tr>
					<tr>
						<td width="130px"><span style="padding: 0 20px;">肿瘤患病风险</span></td>
						<td>
							<div class="textItem"  v-if="!block1">{{formData1.tumourDiseaseRisk}}</div>
							<el-input type="textarea" v-model="formData1.tumourDiseaseRisk" :autosize="{ minRows: 2, maxRows: 3}" class="textCon" v-if="block1"  placeholder="肿瘤患病风险"></el-input>
						</td>
					</tr>
					<tr>
						<td width="130px"><span style="padding: 0 20px;">家族遗传风险</span></td>
						<td>
							<div class="textItem" v-if="!block1">{{formData1.familyGeneticRisk}}</div>
							<el-input type="textarea" v-model="formData1.familyGeneticRisk" :autosize="{ minRows: 2, maxRows: 3}" class="textCon" v-if="block1" placeholder="家族遗传风险"></el-input>
						</td>
					</tr>
				</table>
			</div>
		</div>
</template>
<script>
	export default {
		props: {
			formDatas: {
				type: Object
			},
			
		},
		created() {},
		data() {
			return {
				block1: false,
				canEdit: true,
				formData: {},
				formData1: {}
			}
		},
		methods: {
			changeEdit(val, editorName) {
				let that = this
				that[editorName] = val == 'true' ? true : false,
				that.canEdit = true
			},
			cancerChange(editorName) {
				let that = this
				that[editorName] = false
				// 重新给formData赋值    取消的时候，重置内容
				let n = Object.assign({}, that.formDatas)
				that.formData1 = n
			},
			saveChange(vale, editorName) {
				let that = this
				this[editorName] = false
				this.$emit('saveChange', vale)
			},
// 			inputSub(itemCode, keyName, keyValue) {
// 				let that = this
// 				// return false
// 				that.$emit('saveChange', that.formDatas.code, itemCode, keyName, keyValue)
// 			}
		},
		watch: {
			formDatas: function(newVal, oldVal) {
				let that = this
				that.formData = newVal
				that.formData1 = JSON.parse(JSON.stringify(that.formData))
				console.log(that.formData)
			}
		}
	}
</script>
